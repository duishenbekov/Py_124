
# # '==========================Условия=============================='
# # # Логические операторы - это выражения, которые возращают True, если выражение верно и false - если не верно

# # # print(55 == 55)

# # "равенство"        'не равенство'
# # 5==5 # True        4 != 5 # True
# # 4==5 # False       4 != 4 # False

# # "больше"             'больше или равно'
# # 5 > 4 # True          5 >= 10 False
# # 5 > 10 # False        5 >= 4 True
# # 5 > 5 # False         5 >= 5 True

# # "меньше"             'меньше или равно'
# # 5 < 4 # False         5 <= 10 True
# # 5 < 10 # True         5 <= 4 False
# # 5 < 5 # False         5 <= 5 True

# # '===========================AND, OR, NOT============================='
# # # and = и
# # # or = или
# # # not = нет

# # a = 5
# # b = 6
# # # AND
# # print(a == 5 and b == 6) # True
# # print(a == 5 and b == 7) # False
# # print(a == 1 and b == 1) # False
# # # если все выражения возращают True, то вернется True
# # # если хотябы одно выражение или все выражения возращают False, то вернется False

# # # OR
# # print(a == 5 or b == 6) # True
# # print(a == 5 or b == 2) # True
# # print(a == 1 or b == 1) # False
# # # если хоты бы одно выражение возращает True, то нам вернется True

# # # NOT
# # not True # False
# # not False # True

# # # Приоритет операторв AND OR NOT
# # '''
# # 1 Всегда первым будет выполнятся NOT
# # 2 Вторым по важности будет AND
# # 3 Последний в приоритете будет OR
# # '''

# '==========================Boolean Type==========================='
# # Булевый тип данных имеет только 2 значения : True или False
# print(bool(-123)) # True
# print(bool(0)) # False
# print(bool(''), 'пустота')  # False
# print(bool(' '), 'пробел') # True
# print(bool([[]])) # True
# print(bool([])) # False
# '==========================None Type============================='
# # None - неизменяемый тип данных с одним значением None, который используется для обозначения отсутствия значения, иначе говоря ПУСТОТА
# print(bool(None))
# print(bool('None'))

# '=========================Условные операторы========================'
# # Условные операторы - конструкция, которая используется для того чтобы создать структуру условий для входных данных, для разных событий

# # answer = input('Какой язык программирование мы изучаем ? ')
# # if answer == 'Python':
# #     print('Верно! Мы работаем на Python')
# #     print('Отличный язык !')
# # else:
# #     print('Не совсем так!')
# # Оступ сообщает, где начинается и где заканчивается блок кода

# number = int(input('Введите число: '))
# if number == 1:
#     print('Вы ввели число 1')
# elif number == 2:
#     print("Вы ввели число 2")
# elif number == 3:
#     print('Вы ввели число 3')
# else:
#     print('Вы ввели число больше 3')

# # в одной конструкции может быть только один if
# # в одной конструкции может быть много elif либо вообще отсутствовать
# # в одной конструкции может быть лишь один else либо вообще не быть


# 'Напишите программу, которая считывает одну строку. Если это сторока Python то пусть выводит "ДА" иначе "НЕТ"'

# 'Напишите программу, которая определяет, состоит ли двузначное число, введенное с клавиатуры, из одинаковых цифр. Если состоит, то программа выводит «ДА», в противном случае программа выводит «НЕТ».'


# '=====================Цепочки сравнений====================='
# number = int(input())
# if number == 22 or number == 33 or number == 44 or number == 55 or number == 66 or number == 77 or number == 88 or number == 99:
#     print('ДА')

# age = int(input())
# if 1 <= age <= 2:
#     print('младенец')
# elif  3 <= age <= 6:
#     print('Вы ребенок')
# elif 7 <= age <= 17:
#     print('Подросток')
# elif 18 <= age <= 75:
#     print('Взрослый')
# else:
#     print("Старый")


# a = 4
# b = 4
# c = 1
# if a == c == b: # но это не значит что a != c != b
#     print('числа равны!')
# if a != b and a!= c and c!= b:
#     print('числа не равны')


# '''
# При регистрации на сайтах требуется вводить пароль дважды. Это сделано для безопасности, поскольку такой подход уменьшает возможность неверного ввода пароля.


# Напишите программу, которая сравнивает пароль и его подтверждение. Если они совпадают, то программа выводит: «Пароль принят», иначе: «Пароль не принят».
# '''
# password= input('Введите пароль:')
# password_new = input('Введите пароль еще раз: ')
# if password == password_new:
#     print('Пароль принят')
# else:
#     print('Пароль не принят')
# '''
# Напишите программу, которая считывает три числа и подсчитывает количество чётных чисел.
# 12 22 28  ==> 3
# 11 2 33 ==> 1
# '''
# num1 = int(input())
# num2 = int(input())
# num3 = int(input())
# counter = 0
# if num1 % 2 == 0:
#     counter = counter + 1
# if num2 % 2 == 0:
#     counter = counter + 1
# if num3 % 2 == 0:
#     counter = counter + 1

# print(counter)

# '''
# Напишите программу, которая определяет, является число четным или нечетным.
# 12 ---> Четное число
# 13 ---> Нечетное число
# '''

# '''
# Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется следующее соотношение: сумма первой и последней цифр равна разности второй и третьей цифр.
# 1614 --> Да  1+4 = 5  6-1 = 5
# 1234 --> Нет
# '''
# ==========================Вложенный условный оператор================================
# if условие1:
#     блок кода
# else:   
#     if условие2:    
#         блок кода
#     else:   
#         блок кода
# grade = int(input('1- 100'))
# if grade >= 86:
#     print(5)
# else:
#     if grade >= 76:
#         print(4)
#     else:
#         if grade >= 66:
#             print(3)
#         else:
#             if grade >= 50:
#                 print(2)
#             else:
#                 print(1)
# ============================тернарный оператор=======================================
# Тернарный оператор - это условие в одну строку
# num = int(input("Введите число"))
# result = 'Hello' if num == 5 else 'Bye'
# print(result)
number = int(input("123"))
is_chet = 'chetnoe' if number % 2 == 0 else 'nechetnoe'
print(is_chet)
print('четное' if int(input('Vvedite chislo:'))else 'nechetnoe')
# в  тернарном операторе нету ключевого слова elif,
# выполнится при True - (любое действие) if Условие else  (любое действие) - выполнится при False
